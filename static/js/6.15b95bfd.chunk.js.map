{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Pages/RegisterPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","RegisterPage","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","resetForm","className","onSubmit","event","preventDefault","register","htmlFor","type","id","required","onChange","target"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iFIwDvFC,UAtDM,WAAO,IAAD,EACDC,mBAAS,IADR,mBAClBC,EADkB,KACZC,EADY,OAECF,mBAAS,IAFV,mBAElBG,EAFkB,KAEXC,EAFW,OAGOJ,mBAAS,IAHhB,mBAGlBK,EAHkB,KAGRC,EAHQ,KAKnBC,EAAWC,cAcXC,EAAY,WAChBP,EAAQ,IACRE,EAAS,IACTE,EAAY,KAGd,OACE,qCACE,oBAAII,UAAU,sBAAd,2BACA,uBAAMA,UAAU,gBAAuCC,SAjBtC,SAAAC,GACnBA,EAAMC,iBAENN,EAASO,YAAS,CAAEb,OAAME,QAAOE,cAEjCI,KAYE,UACE,sBAAKC,UAAU,mBAAf,UACE,uBAAOK,QAAQ,gBAAf,kBACA,uBAAOC,KAAK,OAAOf,KAAK,OAAOgB,GAAG,gBAAgBvB,MAAOO,EAAMiB,UAAQ,EAACC,SAxBvD,SAAAP,GAAK,OAAIV,EAAQU,EAAMQ,OAAO1B,aA0BjD,sBAAKgB,UAAU,oBAAf,UACE,uBAAOK,QAAQ,iBAAf,mBACA,uBAAOC,KAAK,QAAQf,KAAK,QAAQgB,GAAG,iBAAiBvB,MAAOS,EAAOe,UAAQ,EAACC,SA3B1D,SAAAP,GAAK,OAAIR,EAASQ,EAAMQ,OAAO1B,aA6BnD,sBAAKgB,UAAU,uBAAf,UACE,uBAAOK,QAAQ,oBAAf,sBACA,uBACEC,KAAK,WACLf,KAAK,WACLgB,GAAG,oBACHvB,MAAOW,EACPa,UAAQ,EACRC,SApCmB,SAAAP,GAAK,OAAIN,EAAYM,EAAMQ,OAAO1B,aAuCzD,wBAAQsB,KAAK,SAAb","file":"static/js/6.15b95bfd.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","//* HOOKS\r\n\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// Operations\r\nimport { register } from '../redux-toolkit/auth/authOperations';\r\n\r\nconst RegisterPage = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNameChange = event => setName(event.target.value);\r\n  const handleEmailChange = event => setEmail(event.target.value);\r\n  const handlePasswordChange = event => setPassword(event.target.value);\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    dispatch(register({ name, email, password }));\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"register-form-title\">Register form</h2>\r\n      <form className=\"register-form\" /*autoComplete=\"off\"*/ onSubmit={onFormSubmit}>\r\n        <div className=\"block name-block\">\r\n          <label htmlFor=\"register-name\">Name</label>\r\n          <input type=\"text\" name=\"name\" id=\"register-name\" value={name} required onChange={handleNameChange} />\r\n        </div>\r\n        <div className=\"block email-block\">\r\n          <label htmlFor=\"register-email\">Email</label>\r\n          <input type=\"email\" name=\"email\" id=\"register-email\" value={email} required onChange={handleEmailChange} />\r\n        </div>\r\n        <div className=\"block password-block\">\r\n          <label htmlFor=\"register-password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"register-password\"\r\n            value={password}\r\n            required\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n\r\n//* CLASS\r\n\r\n// import { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\n// // Operations\r\n// import * as authOperations from '../redux-toolkit/auth/authOperations';\r\n\r\n// class RegisterPage extends Component {\r\n//   state = {\r\n//     name: '',\r\n//     email: '',\r\n//     password: '',\r\n//   };\r\n\r\n//   handleInputChange = event => {\r\n//     const { name, value } = event.target;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   onFormSubmit = event => {\r\n//     event.preventDefault();\r\n\r\n//     this.props.onRegister(this.state);\r\n//     this.setState({ name: '', email: '', password: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, email, password } = this.state;\r\n\r\n//     return (\r\n//       <>\r\n//         <h2 className=\"register-form-title\">Register form</h2>\r\n//         <form className=\"register-form\" autoComplete=\"off\" onSubmit={this.onFormSubmit}>\r\n//           <div className=\"block name-block\">\r\n//             <label for=\"name\">Name</label>\r\n//             <input type=\"text\" name=\"name\" id=\"name\" value={name} required onChange={this.handleInputChange} />\r\n//           </div>\r\n//           <div className=\"block email-block\">\r\n//             <label for=\"email\">Email</label>\r\n//             <input type=\"email\" name=\"email\" id=\"email\" value={email} required onChange={this.handleInputChange} />\r\n//           </div>\r\n//           <div className=\"block password-block\">\r\n//             <label for=\"password\">Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               name=\"password\"\r\n//               id=\"password\"\r\n//               value={password}\r\n//               required\r\n//               onChange={this.handleInputChange}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\">Register</button>\r\n//         </form>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onRegister: authOperations.register,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(RegisterPage);\r\n"],"sourceRoot":""}